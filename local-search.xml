<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>测试</title>
    <link href="/Hexo-blog/2025/10/04/%E6%B5%8B%E8%AF%95/"/>
    <url>/Hexo-blog/2025/10/04/%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<p>☀️</p><div class="warning"><p>这是一个警告框</p></div><div class="tip"><p>这是一个提示框</p></div><div class="note"><p>这是一个注释框</p></div><div class="success"><p>这是一个警告框</p></div><div class="error"><p>这是一个提示框</p></div><div class="info"><p>这是一个注释框</p></div><p>::: danger<br>这是一个注释框<br>:::</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>CF1942C1-2 Bessie&#39;s Birthday Cake 题解</title>
    <link href="/Hexo-blog/2025/10/04/CF1942C1-2-Bessie-s-Birthday-Cake-%E9%A2%98%E8%A7%A3/"/>
    <url>/Hexo-blog/2025/10/04/CF1942C1-2-Bessie-s-Birthday-Cake-%E9%A2%98%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<p><a href="https://codeforces.com/contest/1942/problem/C2">原题链接</a></p><p>考虑将已选择的点拆为链。直接存贮点的位置的数组。</p><p>则原问题转换为：给你 $n$ 个点，在一条直线上。你可以任意连接两个点作为“桥”，但不能与之前的桥相交（两个桥共享一个点的情况是合法的）。</p><p>假定这些点按照 $a_i=i$ 的方式排布，按照 ${1,i\in[3,n]}$ 的方式连接，最大能产生 $n-2$ 的贡献。容易发现不可能比这更多了。</p><hr><p>那么如果这些点不连续，考虑所有点都往点1连接。然后连接空格间的点。</p><p><img src="CF1942C-1.png" alt=""></p><p>令每一个连续的块为 $p_j$，块中最左边叫 $p_{j,0}$，最右边叫 $p_{j,1}$。</p><p>连接空格间的点（即连接 $(p_{j-1,1},,, p_{j,0})$）的目的是为了使得 $(1,p_{j,0})$ 这一条链生效。</p><p>如果相距为 $2$，那么 $(p_{j-1,1},,, p_{j,0})$ 也可以产生贡献。</p><p>如果将链重新连为环，我们可以发现：</p><blockquote><p><strong>不考虑非法情况</strong>，如果 $i=p_{j,0}$ 且 $p_{j,0}=p_{j-1,1}+2$，那么这个点的贡献为 $2$，否则为 $1$。</p></blockquote><p>容易发现这是对的：</p><ul class="lvl-0"><li class="lvl-2"><p>当 $i=p_{j,0}$ 且 $p_{j,0}-p_{j-1,1}&gt;2$ 时，光是 $(p_{j-1,1},,, p_{j,0})$ 是不会产生贡献的，并且中间也没有点给你贡献。而由于 $(1,p_{j-1,1})$ 之间有连接，就有 $(1,p_{j-1,1},p_{j,0})$ 的三角形。所以说贡献体现在 $(1,i)$ 那里。</p></li><li class="lvl-2"><p>当 $i=p_{j,0}$ 且 $p_{j,0}=p_{j-1,1}+2$，很显然就要把 $(p_{j-1,1},,, p_{j,0})$ 考虑到了。</p></li></ul><hr><p>回过头来，再将非法情况完善。</p><p>按照这样，点 $1$ 前面就会有 一条连接 $p_{k,1}$ 的边 和 一个自环。这两个边都是不需要的。$p_{k,1}$ 已经与 $1$ 连接了。（什么你跟我说 $1$ 和 $p_{k,1}$ 贴在一起？我让他偏移一下不就好了。实在偏移不了直接特判）</p><p><img src="CF1942C-2.png" alt=""></p><p>再考虑与 $1$ 过近（或算重）的情况。</p><ul class="lvl-0"><li class="lvl-2"><p>如果 $2$ 与 $1$ 贴在一起，$2$ 的贡献不要即可（就是 -1）。</p></li><li class="lvl-2"><p>如果 $2$ 不与 $1$ 贴贴，那么 $2$ 的贡献 -1，无论是贡献 2 还是贡献 1，可以想想为什么。</p></li></ul><p>那么我们就得到了已选择的点的计算方式：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">calc_orians</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-comment">//n：点数，x：环周长</span><br><span class="hljs-keyword">if</span>(n==x)&#123;<br>ans=x<span class="hljs-number">-3</span>;<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-type">int</span> st;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;++i) <span class="hljs-keyword">if</span>(a[i]%x!=(a[<span class="hljs-built_in">pre</span>(i)]<span class="hljs-number">+1</span>)%x)&#123;st=i;<span class="hljs-keyword">break</span>;&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=st;;)&#123;<br><span class="hljs-type">int</span> j=<span class="hljs-built_in">pre</span>(i);<br><span class="hljs-keyword">if</span>(a[i]%x==(a[j]<span class="hljs-number">+2</span>)%x) ans+=<span class="hljs-number">2</span>;<br><span class="hljs-keyword">else</span> ++ans;<br><br>i=i%n<span class="hljs-number">+1</span>;<br><span class="hljs-keyword">if</span>(i==st) <span class="hljs-keyword">break</span>;<br>&#125;<br>ans-=<span class="hljs-number">2</span><span class="hljs-number">+1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><hr><p>好了现在如果我要往空隙之间插入点那怎么办：</p><p>因为与上一个点的距离为 $2$ 时贡献为 $2$ ，所以使用 010101 的方式插入。</p><p>考虑分类讨论最后一个点的情况：</p><ol><li class="lvl-3"><p>当 gap 为偶数时，<img src="CF1942C-3.png" alt="">，容易发现并没有产生更多的贡献。</p></li><li class="lvl-3"><p>当 gap 为奇数时，<img src="CF1942C-4.png" alt="">，橙色线部分是新的贡献。</p></li></ol><p>也就是说，选 奇数gap 到最后一个的贡献是 3。</p><p>那么肯定优先处理短的 奇数gap。</p><p>然后就做完了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">inline</span> <span class="hljs-type">int</span> <span class="hljs-title">pre</span><span class="hljs-params">(<span class="hljs-type">int</span> p)</span></span>&#123;<span class="hljs-keyword">return</span> ((p<span class="hljs-number">-1</span>==<span class="hljs-number">0</span>)?(n):(p<span class="hljs-number">-1</span>));&#125;<br><br>ll ans;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">calc_orians</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-keyword">if</span>(n==x)&#123;<br>ans=x<span class="hljs-number">-3</span>;<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-type">int</span> st;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;++i) <span class="hljs-keyword">if</span>(a[i]%x!=(a[<span class="hljs-built_in">pre</span>(i)]<span class="hljs-number">+1</span>)%x)&#123;st=i;<span class="hljs-keyword">break</span>;&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=st;;)&#123;<br><span class="hljs-type">int</span> j=<span class="hljs-built_in">pre</span>(i);<br><span class="hljs-keyword">if</span>(a[i]%x==(a[j]<span class="hljs-number">+2</span>)%x) ans+=<span class="hljs-number">2</span>;<br><span class="hljs-keyword">else</span> ++ans;<br><br>i=i%n<span class="hljs-number">+1</span>;<br><span class="hljs-keyword">if</span>(i==st) <span class="hljs-keyword">break</span>;<br>&#125;<br>ans-=<span class="hljs-number">3</span>;<br>&#125;<br><br>ll cnteven;<br>vector&lt;ll&gt; lenodd;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">calc_add</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;++i)&#123;<br><span class="hljs-type">int</span> j=<span class="hljs-built_in">pre</span>(i);<br>ll gap=((a[i]%x)+x-(a[j]%x))%x<span class="hljs-number">-1</span>;<br><span class="hljs-keyword">if</span>(gap&lt;=<span class="hljs-number">1</span>) <span class="hljs-keyword">continue</span>;<br><span class="hljs-keyword">if</span>(gap%<span class="hljs-number">2</span>==<span class="hljs-number">1</span>)&#123;<br>lenodd.<span class="hljs-built_in">emplace_back</span>(gap/<span class="hljs-number">2</span>);<br><span class="hljs-comment">//这里的3是需要先保证2选完才能选的</span><br>&#125;<br><span class="hljs-keyword">else</span> cnteven+=(gap/<span class="hljs-number">2</span>);<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">int</span> T=<span class="hljs-built_in">read</span>();<br><span class="hljs-keyword">while</span>(T--)&#123;<br><span class="hljs-built_in">input</span>();<br><span class="hljs-built_in">calc_orians</span>();<br><span class="hljs-built_in">calc_add</span>();<br><br><span class="hljs-built_in">sort</span>(lenodd.<span class="hljs-built_in">begin</span>(),lenodd.<span class="hljs-built_in">end</span>());<br>ll add=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> len: lenodd)&#123;<br><span class="hljs-keyword">if</span>(m&gt;=len) add+=(len<span class="hljs-number">-1</span>)*<span class="hljs-number">2</span><span class="hljs-number">+3</span>,m-=len;<br><span class="hljs-keyword">else</span> add+=m*<span class="hljs-number">2</span>,m=<span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(m) add+=<span class="hljs-built_in">min</span>(cnteven,m)*<span class="hljs-number">2</span>;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lld\n&quot;</span>,ans+add<span class="hljs-number">+1</span>);<br><br>ans=cnteven=<span class="hljs-number">0</span>;<br>lenodd.<span class="hljs-built_in">clear</span>();<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><a href="https://codeforces.com/contest/1942/submission/341765588">submission</a></p><p>啊呀把 source 文件夹删了，骇死我力</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/Hexo-blog/2025/10/03/hello-world/"/>
    <url>/Hexo-blog/2025/10/03/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
